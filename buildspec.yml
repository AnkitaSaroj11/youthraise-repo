version: 0.2

phases:
  install:
    runtime-versions:
      docker: 20
    commands:
      - echo Installing AWS CLI and Docker
      - aws --version
      - docker --version
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - echo "Region: $AWS_DEFAULT_REGION"
      - echo "ECR URI: $ECR_REPOSITORY_URI"
      - |
        if ! aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $ECR_REPOSITORY_URI; then
          echo 'Docker login failed'
          exit 1
        fi
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-9)
      - IMAGE_TAG=${COMMIT_HASH:=app}
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG1=${COMMIT_HASH:=resque}
  build:
    commands:
      - echo Downloading secrets from S3...
      - aws s3 cp s3://trooptrack-ble/master.key ./config/master.key
      - aws s3 cp s3://trooptrack-ble/youthraise-cicd/production.key ./config/credentials/production.key
      - echo Build started on `date`
      - echo Building Docker images...
      - docker build -t $ECR_REPOSITORY_URI:app .
      - docker tag $ECR_REPOSITORY_URI:app $ECR_REPOSITORY_URI:$IMAGE_TAG 
      - docker build -t $ECR_REPOSITORY_URI:resque -f resque.Dockerfile .
      - docker tag $ECR_REPOSITORY_URI:resque $ECR_REPOSITORY_URI:$IMAGE_TAG1
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing Docker images to ECR...
      - |
        if ! docker push $ECR_REPOSITORY_URI:app; then
          echo 'Docker push for app failed'
          exit 1
        fi
      - |
        if ! docker push $ECR_REPOSITORY_URI:$IMAGE_TAG; then
          echo 'Docker push for app with tag failed'
          exit 1
        fi
      - |
        if ! docker push $ECR_REPOSITORY_URI:resque; then
          echo 'Docker push for resque failed'
          exit 1
        fi
      - |
        if ! docker push $ECR_REPOSITORY_URI:$IMAGE_TAG1; then
          echo 'Docker push for resque with tag failed'
          exit 1
        fi
      - printf '{"ImageURI":"%s:%s"}' $ECR_REPOSITORY_URI $IMAGE_TAG > imageDetail.json
      - printf '{"ImageURI1":"%s:%s"}' $ECR_REPOSITORY_URI $IMAGE_TAG1 > imageDetail1.json

artifacts:
  files:
    - imageDetail.json
    - imageDetail1.json
